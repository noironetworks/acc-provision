default_flavor: kubernetes-1.12

# Known Flavor options:
# - template_generator: Function that generates the output config
#       file. Default: generate_kube_yaml.
# - version_fields: List of config options that must be specified for
#       the specific version of deployment. Default: VERSION_FIELDS.
# - vip_pool_required: Whether virtual IP pool needs to be specified.
#       Default: False.
# - apic: Dict that is used for configuring ApicKubeConfig
#       Known sub-options:
#       - use_kubeapi_vlan: Whether kubeapi_vlan should be used. Default: True.
#       - tenant_generator: Name of the function to generate tenant objects.
#             Default: kube_tn.
#       - associate_aep_to_nested_inside_domain: Whether AEP should be attached
#             to nested_inside domain. Default: False.
kubeFlavorOptions: {}

cfFlavorOptions: &anchor
  apic:
    use_kubeapi_vlan: false
    tenant_generator: cloudfoundry_tn
    associate_aep_to_nested_inside_domain: true
  version_fields: [] 
  vip_pool_required: true

flavors: 
  # Upstream Kubernetes
  kubernetes-1.14:
    desc: Kubernetes 1.14
    default_version: 4.1
    status: Experimental
    hidden: false
    order: 16
  kubernetes-1.13:
    desc: Kubernetes 1.13
    default_version: 4.1
    status: null
    hidden: false
    order: 5
  kubernetes-1.12:
    desc: Kubernetes 1.12
    default_version: 4.1
    status: null
    hidden: false
    order: 6
  kubernetes-1.11:
    desc: Kubernetes 1.11
    default_version: 1.9
    status: null
    hidden: true
    order: 7
  kubernetes-1.10:
    desc: Kubernetes 1.10
    default_version: 1.9
    status: null
    hidden: true
    order: 8
  kubernetes-1.9:
    desc: Kubernetes 1.9
    default_version: 1.9
    status: null
    hidden: true
    order: 9
  kubernetes-1.8:
    desc: Kubernetes 1.8
    default_version: 1.7
    config:
      kube_config:
        use_apps_api: apps/v1beta2
        use_apps_apigroup: apps
    status: null
    hidden: true
    order: 10
  kubernetes-1.7:
    desc: Kubernetes 1.7
    default_version: 1.7
    config:
      kube_config:
        use_rbac_api: rbac.authorization.k8s.io/v1beta1
        use_apps_api: extensions/v1beta1
        use_apps_apigroup: extensions
    status: null
    hidden: true
    order: 11
  kubernetes-1.6:
    desc: Kubernetes 1.6
    default_version: 1.6
    config:
      kube_config:
        use_rbac_api: rbac.authorization.k8s.io/v1beta1
        use_apps_api: extensions/v1beta1
        use_apps_apigroup: extensions
        use_netpol_annotation: True
        use_netpol_apigroup: extensions
    status: null
    hidden: true
    order: 12
  openshift-3.11:
    desc: Red Hat OpenShift Container Platform 3.11
    default_version: 4.1
    config:
      kube_config:
        use_external_service_ip_allocator: True
        use_privileged_containers: True
        use_openshift_security_context_constraints: True
        use_cnideploy_initcontainer: True
        allow_kube_api_default_epg: True
        kubectl: oc
        system_namespace: aci-containers-system
      aci_config:
        items:
          - name: openshift-svc-catalog
            range:
              -
                [2379, 2379]
            etherT: ip
            prot: tcp
            stateful: "no"
            consumed: ["kube-system"]
            provided: ["kube-nodes"]
          - name: openshift-monitoring
            range:
              -
                [9091, 9091]
              -
                [9094, 9094]
            etherT: ip
            prot: tcp
            stateful: "no"
            provided: ["kube-system","kube-default","kube-nodes"]
            consumed: ["kube-system","kube-default"]
        vmm_domain:
          type: OpenShift
    status: null
    hidden: false
    order: 1
  openshift-3.10:
    desc: Red Hat OpenShift Container Platform 3.10
    default_version: 4.1
    config:
      kube_config:
        use_external_service_ip_allocator: True
        use_privileged_containers: True
        use_openshift_security_context_constraints: True
        use_cnideploy_initcontainer: True
        allow_kube_api_default_epg: True
        kubectl: oc
        system_namespace: aci-containers-system
      aci_config:
        items:
          - name: openshift-svc-catalog
            range:
              -
                [2379, 2379]
            etherT: ip
            prot: tcp
            stateful: "no"
            consumed: ["kube-system"]
            provided: ["kube-nodes"]
          - name: openshift-monitoring
            range:
              -
                [9091, 9091]
              -
                [9094, 9094]
            etherT: ip
            prot: tcp
            stateful: "no"
            provided: ["kube-system","kube-default","kube-nodes"]
            consumed: ["kube-system","kube-default"]
        vmm_domain:
          type: OpenShift
    status: null
    hidden: false
    order: 2
  openshift-3.9:
    desc: Red Hat OpenShift Container Platform 3.9
    default_version: 4.1
    config:
      kube_config:
        use_external_service_ip_allocator: True
        use_privileged_containers: True
        use_openshift_security_context_constraints: True
        use_cnideploy_initcontainer: True
        allow_kube_api_default_epg: True
        kubectl: oc
        system_namespace: aci-containers-system
      aci_config:
        items:
          - name: openshift-svc-catalog
            range:
              -
                [2379, 2379]
            etherT: ip
            prot: tcp
            stateful: "no"
            consumed: ["kube-system"]
            provided: ["kube-nodes"]
          - name: openshift-monitoring
            range:
              -
                [9091, 9091]
              -
                [9094, 9094]
            etherT: ip
            prot: tcp
            stateful: "no"
            provided: ["kube-system","kube-default","kube-nodes"]
            consumed: ["kube-system","kube-default"]
        vmm_domain:
          type: OpenShift
    status: null
    hidden: false
    order: 3
  openshift-3.6:
    desc: Red Hat OpenShift Container Platform 3.6
    default_version: 1.6
    config:
      kube_config:
        use_external_service_ip_allocator: True
        use_privileged_containers: True
        use_openshift_security_context_constraints: True
        use_cnideploy_initcontainer: True
        allow_kube_api_default_epg: True
        use_rbac_api: v1
        use_apps_api: extensions/v1beta1
        use_apps_apigroup: extensions
        use_netpol_annotation: True
        use_netpol_apigroup: extensions
        kubectl: oc
        system_namespace: aci-containers-system
      aci_config:
      # this will generate apic config like this:
      # {
      #                         "vzEntry": {
      #                             "attributes": {
      #                                 "name": "openshift-svc-catalog",
      #                                 "etherT": "ip",
      #                                 "prot": "tcp",
      #                                 "dFromPort": "2379",
      #                                 "dToPort": "2379",
      #                                 "stateful": "no",
      #                                 "tcpRules": ""
      #                             }
      #                         }
      #                     }
        items:
          - name: openshift-svc-catalog
            range:
              -
                [2379, 2379]
            etherT: ip
            prot: tcp
            stateful: "no"
            consumed: ["kube-system"]
            provided: ["kube-nodes"]
          - name: openshift-monitoring
            range:
              -
                [9091, 9091]
              -
                [9094, 9094]
            etherT: ip
            prot: tcp
            stateful: "no"
            provided: ["kube-system","kube-default","kube-nodes"]
            consumed: ["kube-system","kube-default"]
        vmm_domain:
          type: OpenShift
    status: null
    hidden: true
    order: 4
  # Docker Universal Control Plane (UCP)
  docker-ucp-3.0:
    desc: Docker Universal Control Plane (UCP) 3.0
    default_version: 4.1
    status: Experimental
    hidden: false
    config:
      aci_config:
  #https://docs.docker.com/ee/ucp/admin/install/system-requirements/
        items:
          - name: ucp-ui-port
            range: [443, 443]
            etherT: ip
            prot: tcp
            stateful: "no"
          - name: ucp-tls-port
            range: [12376, 12376]
            etherT: ip
            prot: tcp
            stateful: "no"
          - name: ucp-kubelet-port
            range: [10250, 10250]
            etherT: ip
            prot: tcp
            stateful: "no"
          - name: ucp-misc-ports
            range: [12378, 12388]
            etherT: ip
            prot: tcp
            stateful: "no"
    order: 14
  # CloudFoundry
  cloudfoundry-1.0:
    desc: CloudFoundry cf-deployment 1.x
    default_version: 4.1
    config:
      aci_config:
         vmm_domain:
           type: CloudFoundry
    options: *anchor
    status: null
    hidden: false
    order: 13
  k8s-localhost:
    desc: Kubernetes localhost 
    default_version: 4.1
    config:
      kube_config:
        use_aci_anywhere_crd: True
        pod_exec_resources_controller: True
        skip_namespace_resource_hostagent: True
        skip_replicationcontroller_resource_hostagent: True
        skip_default_endpoint_group: True
        all_access_controller_clusterrole: True
        no_hostagent_networking_clusterrole: True
        no_hostagent_deployment_clusterrole: True
        run_opflex_server_container: True
        run_gbp_container: True
        use_opflex_server_volume: True
        use_kubeconfig_volume: True
    status: Experimental
    hidden: False
    order: 15
