
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02djZRaU5xd0k4Wml1UTJubkN4bjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU1UQXdOVFV6TkZvWERUSTNNRE15TVRBdwpOVFV6TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxczIxMEdocHc5NVlrUzdSZDdXR1RyYkxPVys2UDFZVVdDeWlHRXIrQlQ1YVp5aHMKNmN1SVRlcGtIdjkra2ZNaElPZjQ5a1ZnNFJzUGRKL203S2cvMXNtNVUzdGFMdW54MkQ2Mit2Nld0LzdKQVg1QwprdHlZaVgzUUdETG5Kb3Y5bm5OR2RyS3doUTU0VGdlRW9KZWtBUElZUjc2djNpdlZjRTVxTE1LWmQ0YUtDSDMzClhBLzJBZnFjdVBUMGkrYklHdERCMnRmVjZEakJib3h6eUthSDVBa0hJemZ6RkFCT1BNOTVsNS9UQ3h0RHF0VGoKdzR2R0U4L0JvNlpnSXRTK3pBbGN3bFE2cytuL2RMU2NkRitsZDRSUWVxajNNZUUzU0gzWXhxU2VQNTZqTDZycgpzRjJIMzBUQ0gwVWR6czFpcjJGVFhua0cxT05Jb3BsTG1UNVlrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZ0TFpOWnl2U1cySkcyWUM2YXMycEJOdFJDTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZac01UeHpMcUxVVjU1ZHZSMSsyekdaREkzZWRabjBzTVp3aldMUEo2aitkVWJmWjFSSE5XCjAwdTFuTVRHNk8xNWkrZnpXYTFtUjJlQXA0by9ZcHhjTjFUc29xMTlmTlZLNG1IVHFuQ3hNTTI4c29SNmxqb3EKTmQ5M213dHlLbFM0T3ZORkJIU2dzbFJOT0lmeHJFdGs2NzR3Y3lOWk9ieUxBdlByTitZRXFLcnYvWUZ0V2V3dgpHRytQajR0VkRLZ1o5UUUwUU1zcm1aR1NVL1Q0V2VDVW0zQytoS2Nsejg3UGZnZDhsQzVRbnRvYUcvcjJja0Y5ClBkdlJBSi94RGkrdkVrd001TUE4ZUFqdGcxTTk1S2RwMW1sNjdISjJicW5IdXVURndjbVFmT21zc01wZTNlVnkKeEQvV0pQc0dtTTJaSEZUbDl6VGl0bHdQbFlVUnFJNDcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXMyMTBHaHB3OTVZa1M3UmQ3V0dUcmJMT1crNlAxWVVXQ3lpR0VyK0JUNWFaeWhzCjZjdUlUZXBrSHY5K2tmTWhJT2Y0OWtWZzRSc1BkSi9tN0tnLzFzbTVVM3RhTHVueDJENjIrdjZXdC83SkFYNUMKa3R5WWlYM1FHRExuSm92OW5uTkdkckt3aFE1NFRnZUVvSmVrQVBJWVI3NnYzaXZWY0U1cUxNS1pkNGFLQ0gzMwpYQS8yQWZxY3VQVDBpK2JJR3REQjJ0ZlY2RGpCYm94enlLYUg1QWtISXpmekZBQk9QTTk1bDUvVEN4dERxdFRqCnc0dkdFOC9CbzZaZ0l0Uyt6QWxjd2xRNnMrbi9kTFNjZEYrbGQ0UlFlcWozTWVFM1NIM1l4cVNlUDU2akw2cnIKc0YySDMwVENIMFVkenMxaXIyRlRYbmtHMU9OSW9wbExtVDVZa1FJREFRQUJBb0lCQVFDT3kyZ0RFaWZLRHFzdwp4Vmx0b1I3bDA4QlhCbWRJNkNnZUIwS0UyTDFCbVAxdlhNYWhOdjEvVmtQWi9uUE1oTnpmYTlBaDQ2SzR6eXkrCnJhZ2JsaFc0OWZDd01HSVc4cEt6M01xUlVDS2xOS2JMVHNsTmlvc2o5MER2Mmk2UmRWdlZDajZRb1pjZHhoa2gKOHZzWVgyNUhOQjdFYkZFUGhzbnNHRUovcFRrMFNMSUt2YkRKUVZKOUpmN3RoOVVUTk5tZmVvYlVsdzgvM28rYQp1aTBJTGxidmlKVWxzcjF2bjhJd0xycmtCdFBlRXRhYlNtWmNkMzlGWHpRRmtnVUVKcC9pZ0NlTUhuWWcxcTVjCmI3ZWVnQmVWcXBaTnNCRmtxaytTaVpDaHNMQVJyVzdORXRXN3ViNTA4eHRSNTJsVW5wVG1zdWtsZWU4UytoMVQKeWx5VWgxRlpBb0dCQU4xMEpNOVNHazlTRWlBdExjcFZCd3Zyb2tZcG13ejJsczlvb3JKaWFWNnpnQlc4ZnMrRAppNU0zQ2JFNlUyZ0pqc3E1cU5JSTZvU084eGFScDZ0ZU1JaWZuSExyUmlDMVVqK0VsemM5Y09rS2hQT0kxMGJtClN5NHF4SllnYmtEeE5kY1ZCN3I1SzdhMzJvcmFRZTh4WDZqMmV1RTJRWG43U0ExeEt0TWVOcDkzQW9HQkFNVnkKMUc5US8zNExab21yRkZUSXhqT0l3Q0VidGxlcjYrY0NTZElpV2lKQm9QY1hSa1NINnlyRWdTR0hXZTVYdEVjcApjUkEyREFWck1JOGdOVWxEM09NeU1PUkp1WWU3d1ZRUTU3OHMrTzVJQURIa1Y1cC85SjlOSWp2cVNHa05DNFplCitqdXFRU2tIYVQ0bTVuRHZSVUZwWlUrdXM2Nzkxdis3bGdqZk1CbzNBb0dBYlExeHh3cG1YR05NKzcxanpEeDgKNE5qanEydDNxRFdTWkliaGY3aklyTkwySXo0VXNIblY5T1BvaVBidzljMm5ISnU2ejl1R0tVci8yRUJYOGlMTApBYXlmN1ZPQTBFQ2FSUjgxSEFYTW9XWUZ2S3ZKWDJldTVBZzVrTGhkc3V0Vm1Sb0pHWUQwanVFUTVNbkFLRnNICkFYeUhYSHBNV2hadEQvbUhuamxGcXRjQ2dZRUF0ZGVraUFSNzJOU2RFYXJxcFk3bTR1MU5yUEE5eFk2RFN4U1QKY2lETERBT1BRQ0ZDU0xrNHZ3R012NWxOSExIUFNUNkViMTZuUVpKUGZYRTNRZ3RxOGg3MllqajMwbWI3alBXbwp5U3VjOHE2QzUzQVpzaU9uNGRLQzlkVTE3UEhqckZQcWQycThhaEgyUGhSTFpMVW4vaThYN0FQRVhpUlBqdVJ2Ck1DcUV2WThDZ1lCb3FyVnMxRng0cCtKaW9sMlVlalVkSWtTWlRITUtNREhFY2Z1b1dwRWp4cGFKTW5MUnVNVFMKQ1o4SFV0bVFxNjlZVmV4UW1TZ0ZVMjhvSXpUTVpyeVFRRjdUVVZ4Mk15azFST21IcWRLcjlPOE9aM0VueHd5NgpoZU5yaGVOZm0zRnlpWFR2allzMlp5N0xBWWJYdy9Bd2xPcWdSVUNvUm9sVHM3emhtWENhanc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02djZRaU5xd0k4Wml1UTJubkN4bjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU1UQXdOVFV6TkZvWERUSTNNRE15TVRBdwpOVFV6TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxczIxMEdocHc5NVlrUzdSZDdXR1RyYkxPVys2UDFZVVdDeWlHRXIrQlQ1YVp5aHMKNmN1SVRlcGtIdjkra2ZNaElPZjQ5a1ZnNFJzUGRKL203S2cvMXNtNVUzdGFMdW54MkQ2Mit2Nld0LzdKQVg1QwprdHlZaVgzUUdETG5Kb3Y5bm5OR2RyS3doUTU0VGdlRW9KZWtBUElZUjc2djNpdlZjRTVxTE1LWmQ0YUtDSDMzClhBLzJBZnFjdVBUMGkrYklHdERCMnRmVjZEakJib3h6eUthSDVBa0hJemZ6RkFCT1BNOTVsNS9UQ3h0RHF0VGoKdzR2R0U4L0JvNlpnSXRTK3pBbGN3bFE2cytuL2RMU2NkRitsZDRSUWVxajNNZUUzU0gzWXhxU2VQNTZqTDZycgpzRjJIMzBUQ0gwVWR6czFpcjJGVFhua0cxT05Jb3BsTG1UNVlrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZ0TFpOWnl2U1cySkcyWUM2YXMycEJOdFJDTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZac01UeHpMcUxVVjU1ZHZSMSsyekdaREkzZWRabjBzTVp3aldMUEo2aitkVWJmWjFSSE5XCjAwdTFuTVRHNk8xNWkrZnpXYTFtUjJlQXA0by9ZcHhjTjFUc29xMTlmTlZLNG1IVHFuQ3hNTTI4c29SNmxqb3EKTmQ5M213dHlLbFM0T3ZORkJIU2dzbFJOT0lmeHJFdGs2NzR3Y3lOWk9ieUxBdlByTitZRXFLcnYvWUZ0V2V3dgpHRytQajR0VkRLZ1o5UUUwUU1zcm1aR1NVL1Q0V2VDVW0zQytoS2Nsejg3UGZnZDhsQzVRbnRvYUcvcjJja0Y5ClBkdlJBSi94RGkrdkVrd001TUE4ZUFqdGcxTTk1S2RwMW1sNjdISjJicW5IdXVURndjbVFmT21zc01wZTNlVnkKeEQvV0pQc0dtTTJaSEZUbDl6VGl0bHdQbFlVUnFJNDcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXMyMTBHaHB3OTVZa1M3UmQ3V0dUcmJMT1crNlAxWVVXQ3lpR0VyK0JUNWFaeWhzCjZjdUlUZXBrSHY5K2tmTWhJT2Y0OWtWZzRSc1BkSi9tN0tnLzFzbTVVM3RhTHVueDJENjIrdjZXdC83SkFYNUMKa3R5WWlYM1FHRExuSm92OW5uTkdkckt3aFE1NFRnZUVvSmVrQVBJWVI3NnYzaXZWY0U1cUxNS1pkNGFLQ0gzMwpYQS8yQWZxY3VQVDBpK2JJR3REQjJ0ZlY2RGpCYm94enlLYUg1QWtISXpmekZBQk9QTTk1bDUvVEN4dERxdFRqCnc0dkdFOC9CbzZaZ0l0Uyt6QWxjd2xRNnMrbi9kTFNjZEYrbGQ0UlFlcWozTWVFM1NIM1l4cVNlUDU2akw2cnIKc0YySDMwVENIMFVkenMxaXIyRlRYbmtHMU9OSW9wbExtVDVZa1FJREFRQUJBb0lCQVFDT3kyZ0RFaWZLRHFzdwp4Vmx0b1I3bDA4QlhCbWRJNkNnZUIwS0UyTDFCbVAxdlhNYWhOdjEvVmtQWi9uUE1oTnpmYTlBaDQ2SzR6eXkrCnJhZ2JsaFc0OWZDd01HSVc4cEt6M01xUlVDS2xOS2JMVHNsTmlvc2o5MER2Mmk2UmRWdlZDajZRb1pjZHhoa2gKOHZzWVgyNUhOQjdFYkZFUGhzbnNHRUovcFRrMFNMSUt2YkRKUVZKOUpmN3RoOVVUTk5tZmVvYlVsdzgvM28rYQp1aTBJTGxidmlKVWxzcjF2bjhJd0xycmtCdFBlRXRhYlNtWmNkMzlGWHpRRmtnVUVKcC9pZ0NlTUhuWWcxcTVjCmI3ZWVnQmVWcXBaTnNCRmtxaytTaVpDaHNMQVJyVzdORXRXN3ViNTA4eHRSNTJsVW5wVG1zdWtsZWU4UytoMVQKeWx5VWgxRlpBb0dCQU4xMEpNOVNHazlTRWlBdExjcFZCd3Zyb2tZcG13ejJsczlvb3JKaWFWNnpnQlc4ZnMrRAppNU0zQ2JFNlUyZ0pqc3E1cU5JSTZvU084eGFScDZ0ZU1JaWZuSExyUmlDMVVqK0VsemM5Y09rS2hQT0kxMGJtClN5NHF4SllnYmtEeE5kY1ZCN3I1SzdhMzJvcmFRZTh4WDZqMmV1RTJRWG43U0ExeEt0TWVOcDkzQW9HQkFNVnkKMUc5US8zNExab21yRkZUSXhqT0l3Q0VidGxlcjYrY0NTZElpV2lKQm9QY1hSa1NINnlyRWdTR0hXZTVYdEVjcApjUkEyREFWck1JOGdOVWxEM09NeU1PUkp1WWU3d1ZRUTU3OHMrTzVJQURIa1Y1cC85SjlOSWp2cVNHa05DNFplCitqdXFRU2tIYVQ0bTVuRHZSVUZwWlUrdXM2Nzkxdis3bGdqZk1CbzNBb0dBYlExeHh3cG1YR05NKzcxanpEeDgKNE5qanEydDNxRFdTWkliaGY3aklyTkwySXo0VXNIblY5T1BvaVBidzljMm5ISnU2ejl1R0tVci8yRUJYOGlMTApBYXlmN1ZPQTBFQ2FSUjgxSEFYTW9XWUZ2S3ZKWDJldTVBZzVrTGhkc3V0Vm1Sb0pHWUQwanVFUTVNbkFLRnNICkFYeUhYSHBNV2hadEQvbUhuamxGcXRjQ2dZRUF0ZGVraUFSNzJOU2RFYXJxcFk3bTR1MU5yUEE5eFk2RFN4U1QKY2lETERBT1BRQ0ZDU0xrNHZ3R012NWxOSExIUFNUNkViMTZuUVpKUGZYRTNRZ3RxOGg3MllqajMwbWI3alBXbwp5U3VjOHE2QzUzQVpzaU9uNGRLQzlkVTE3UEhqckZQcWQycThhaEgyUGhSTFpMVW4vaThYN0FQRVhpUlBqdVJ2Ck1DcUV2WThDZ1lCb3FyVnMxRng0cCtKaW9sMlVlalVkSWtTWlRITUtNREhFY2Z1b1dwRWp4cGFKTW5MUnVNVFMKQ1o4SFV0bVFxNjlZVmV4UW1TZ0ZVMjhvSXpUTVpyeVFRRjdUVVZ4Mk15azFST21IcWRLcjlPOE9aM0VueHd5NgpoZU5yaGVOZm0zRnlpWFR2allzMlp5N0xBWWJYdy9Bd2xPcWdSVUNvUm9sVHM3emhtWENhanc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02djZRaU5xd0k4Wml1UTJubkN4bjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU1UQXdOVFV6TkZvWERUSTNNRE15TVRBdwpOVFV6TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxczIxMEdocHc5NVlrUzdSZDdXR1RyYkxPVys2UDFZVVdDeWlHRXIrQlQ1YVp5aHMKNmN1SVRlcGtIdjkra2ZNaElPZjQ5a1ZnNFJzUGRKL203S2cvMXNtNVUzdGFMdW54MkQ2Mit2Nld0LzdKQVg1QwprdHlZaVgzUUdETG5Kb3Y5bm5OR2RyS3doUTU0VGdlRW9KZWtBUElZUjc2djNpdlZjRTVxTE1LWmQ0YUtDSDMzClhBLzJBZnFjdVBUMGkrYklHdERCMnRmVjZEakJib3h6eUthSDVBa0hJemZ6RkFCT1BNOTVsNS9UQ3h0RHF0VGoKdzR2R0U4L0JvNlpnSXRTK3pBbGN3bFE2cytuL2RMU2NkRitsZDRSUWVxajNNZUUzU0gzWXhxU2VQNTZqTDZycgpzRjJIMzBUQ0gwVWR6czFpcjJGVFhua0cxT05Jb3BsTG1UNVlrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZ0TFpOWnl2U1cySkcyWUM2YXMycEJOdFJDTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZac01UeHpMcUxVVjU1ZHZSMSsyekdaREkzZWRabjBzTVp3aldMUEo2aitkVWJmWjFSSE5XCjAwdTFuTVRHNk8xNWkrZnpXYTFtUjJlQXA0by9ZcHhjTjFUc29xMTlmTlZLNG1IVHFuQ3hNTTI4c29SNmxqb3EKTmQ5M213dHlLbFM0T3ZORkJIU2dzbFJOT0lmeHJFdGs2NzR3Y3lOWk9ieUxBdlByTitZRXFLcnYvWUZ0V2V3dgpHRytQajR0VkRLZ1o5UUUwUU1zcm1aR1NVL1Q0V2VDVW0zQytoS2Nsejg3UGZnZDhsQzVRbnRvYUcvcjJja0Y5ClBkdlJBSi94RGkrdkVrd001TUE4ZUFqdGcxTTk1S2RwMW1sNjdISjJicW5IdXVURndjbVFmT21zc01wZTNlVnkKeEQvV0pQc0dtTTJaSEZUbDl6VGl0bHdQbFlVUnFJNDcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTFVlTUtOeVlHZGUzclZQU1RKUWlEVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJeE1EQTFOVE0wV2hjTk1qY3dNekl4TURBMQpOVE0wV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESjJNUk5RMnJPdExiTmg4cFo4c0wxSkxBMGJyS1YKc2Z1YW54ZVdDYkNBdjlnazBxZkVoR3h2UjBadGJZUlFTYnNpVm1xclh6WWdaaWpLa0trK29BS2YrMW5VWktKVwpZTXdWazhkMmYrOGlsd25GaTZoVVl1empMWnRkcXMzMHJ6WjE3OTdOTGdvbEJQY2IwL1MvditxUlpDa05zNHJTCjRYK3g4RWZUNTRoek5zR3hYZkxraEw2YXFpdE9VYkkrNkxqQi9rd3E1SWk1Y3diSVRmdG10Y0cyemkzNHNZTkIKbVU1VVBnRFhpQXRBdVVUWWpFN3l4RmxGOVNDeXlTK0xJQU5Hb3B6d2NoVTcvbHVqbmg5M1JyQ0JNMjQwaXJ2QQplS2lHQURCZmdhN1lzQWhMaW54ZTZkWjZ4ZElkdGoyZ1lyeCtBaWpBWWFCakkwVW9OK1FPYkFTWkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBZnRMWk5aeXZTVzJKRzJZQzZhczJwQgpOdFJDTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFqSUR3ODVxTnRwZ21xUXUveVhpSWRkckxVbksxQkFNQW5lT1JnbGV4V1padEJSakgKeHgxM2FsSEFHZ0NEN3FGaGIxa29CN3Ivb0srY3FrUFJsRjhFOUdWY0ZvOEJreUxNMldpZTFmZ1ozZnl3S053UApJTXhLeHYyOWVFMGk2WTBPbFh5TzA2Q3RVOFBNMVlvWlZ5TGJFbjJCZitDd1B1Um1meW02SG5DOGI0eXRpSU1WCjl0S1ZGRUI3SmRweXRpakdiekcrWHhCbjUxb3Y1dC90SFE4R2d2UTdTMTRTdFlrb1lJUkkvM0hmOXZhNUJPOFUKZUtsL0xIa1M1L0ZEN0NaMThTZnRoQ0FJWkRaaDYyZCtxMUxqQUk1aCtwZFlaaWJtczNYRGpDNWtHWmVwd1RPcAovYWxWQnRFVE1UOUlaV3VkekpxTVpBSGVRUFZIeVpzNmxFNElGdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWRqRVRVTnF6clMyellmS1dmTEM5U1N3Tkc2eWxiSDdtcDhYbGdtd2dML1lKTktuCnhJUnNiMGRHYlcyRVVFbTdJbFpxcTE4MklHWW95cENwUHFBQ24vdFoxR1NpVm1ETUZaUEhkbi92SXBjSnhZdW8KVkdMczR5MmJYYXJOOUs4MmRlL2V6UzRLSlFUM0c5UDB2Ny9xa1dRcERiT0swdUYvc2ZCSDArZUljemJCc1YzeQo1SVMrbXFvclRsR3lQdWk0d2Y1TUt1U0l1WE1HeUUzN1pyWEJ0czR0K0xHRFFabE9WRDRBMTRnTFFMbEUySXhPCjhzUlpSZlVnc3Nrdml5QURScUtjOEhJVk8vNWJvNTRmZDBhd2dUTnVOSXE3d0hpb2hnQXdYNEd1MkxBSVM0cDgKWHVuV2VzWFNIYlk5b0dLOGZnSW93R0dnWXlORktEZmtEbXdFbVFJREFRQUJBb0lCQUVlUWQyajljaXovbmFDWgplSUVUdFZPOVFrd1V3M1NYdWlGRUx0U2ZjdGp6Syt0Q1ZRRTBBazRoOHpKeEZleHhkOHZnMzhrSzVPSHYxcDZiClU2WkVqU216c0ZIQnJGejd6T0FKbVRyR2VUN0dWa3lZQzRKLzRJVmJjaTV2bEw0Z01TcjNkUU5DUTQ2RWlDaHgKcWVFaVprUk9Rcy84ekVlZ2MrbmV5MWl5U29xdVNpR1RKenRYNzc2aUZnUXgrSzBkcGMwbjIxc1VPN0RhY0VIVAo4L2tVMnMrMHJ6dVFZQmtaZHhta3JBdHFPbkttU1JaVUQxenk5L3R1cVBGbmRYZTNLTHcvNkNwbDZFalo2VTRsCi9OUzV2STloTWU4d2JyblpndEpyS3hJcFpzODNUYVBkSHgvajZ3aXF0L2dGQzZFMUNydEo2MDhtZG9PRXNmekgKZGF0cHAwRUNnWUVBNEVYa21CdVNXNzNWZ1hlVTdYVWQzVXVPcUVnbGhpWmpUQmhHZCtGUVFUcjFOdTF5TkpxYwp4UVpzeUg0WVByelYrUEV3WUNXaUp5dS9LQ2ZhUm9HUHo4eTRVTGgrSnFBMU0zVy9xRVEyNjNFNzVIbTlBNU5KCitEakhwR3dIcy96TVBJR3lmME5WN2tVTUI2YWRNR3FXNmYzZER4MGg3L3k2RUswWUhKcGtoZTBDZ1lFQTVtYXoKVEJVUWFGZlBBKytYdloxdXp0UHU4NU0veTNtOTk4OGozK3hzQm40N21yY3F1d0RJY2FZQXdLZlB0Nyt1b3VQbwp0MlVQUjVUMW9BemowVFJ2b1BPVmpDTlplNW5IU0VMYW1VZUdrUzRpbjZER3g0Z1lZZENHdGF1WUJrOXF1a0lJCjlndWltQlhCaWtVUlYrSVp5QzlGSjNhNEVaaDdrTDhRUFZvSkk5MENnWUVBdFFaVmJKMmN0bVoxUnFwaVVJVWYKRlBlZTc2QkVnWkxNeGFnMmdSOGg2M1VPWjBhanoyZ1pNRU51WFNyQ29TbEZRVXBWTk5aTG0zaUpOSDF1aDBpZQo3eWtjZ1ROWnlBMjZ3NDNBcEs1aThnb1ZRT2N1dFFzWFFyOTZEZktSQ1N2OUlyM0JlVTI5dDdTTjhFTUJVQXBKClJCZ0FiZW1pOGhZNWphcFo4d1NBTFVVQ2dZQW9YcGhOM1diNWtXRWhaR3FtKzUyOXVaNmxxUWhGZzdoSVlrLzcKM1RYMFVVdnFTT3ZBeGx0WXBtaDlXU25wSFRuaEtxUE05blVkNnJpNjZXZEZjYldaY3ZTaUVGT09kNXhXU2ZoNQpZUEh3SURCSzNlWFdjajhyYkZrZUhjbk9XVDN2RXNEMU00YXl0U1VyTC96ZzlDbm1USG9HZHlPN1dZZFZEbFV2CkdzWjlOUUtCZ0h0OFNEeUozNHFRUHBvTzU0VzhQdWt1d0xMdXlFdG1uT25aZll2YnVBMUR4MnpxVmVVa1VLOFkKaGFqaXNxOENZbVVwVldsNFdGRG5LOG5HUHp0aVBMR0VSekRkVkVCalpGWWlGaStHTzlyVGp2cUY2UXEzV0NkLwpENU11clE4cUlOOGZXSWIyMEVhVkJYcTNtMnlMNElZUStLZy9DcTRTc2ZicW5tMkgyc2t4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02djZRaU5xd0k4Wml1UTJubkN4bjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU1UQXdOVFV6TkZvWERUSTNNRE15TVRBdwpOVFV6TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxczIxMEdocHc5NVlrUzdSZDdXR1RyYkxPVys2UDFZVVdDeWlHRXIrQlQ1YVp5aHMKNmN1SVRlcGtIdjkra2ZNaElPZjQ5a1ZnNFJzUGRKL203S2cvMXNtNVUzdGFMdW54MkQ2Mit2Nld0LzdKQVg1QwprdHlZaVgzUUdETG5Kb3Y5bm5OR2RyS3doUTU0VGdlRW9KZWtBUElZUjc2djNpdlZjRTVxTE1LWmQ0YUtDSDMzClhBLzJBZnFjdVBUMGkrYklHdERCMnRmVjZEakJib3h6eUthSDVBa0hJemZ6RkFCT1BNOTVsNS9UQ3h0RHF0VGoKdzR2R0U4L0JvNlpnSXRTK3pBbGN3bFE2cytuL2RMU2NkRitsZDRSUWVxajNNZUUzU0gzWXhxU2VQNTZqTDZycgpzRjJIMzBUQ0gwVWR6czFpcjJGVFhua0cxT05Jb3BsTG1UNVlrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZ0TFpOWnl2U1cySkcyWUM2YXMycEJOdFJDTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZac01UeHpMcUxVVjU1ZHZSMSsyekdaREkzZWRabjBzTVp3aldMUEo2aitkVWJmWjFSSE5XCjAwdTFuTVRHNk8xNWkrZnpXYTFtUjJlQXA0by9ZcHhjTjFUc29xMTlmTlZLNG1IVHFuQ3hNTTI4c29SNmxqb3EKTmQ5M213dHlLbFM0T3ZORkJIU2dzbFJOT0lmeHJFdGs2NzR3Y3lOWk9ieUxBdlByTitZRXFLcnYvWUZ0V2V3dgpHRytQajR0VkRLZ1o5UUUwUU1zcm1aR1NVL1Q0V2VDVW0zQytoS2Nsejg3UGZnZDhsQzVRbnRvYUcvcjJja0Y5ClBkdlJBSi94RGkrdkVrd001TUE4ZUFqdGcxTTk1S2RwMW1sNjdISjJicW5IdXVURndjbVFmT21zc01wZTNlVnkKeEQvV0pQc0dtTTJaSEZUbDl6VGl0bHdQbFlVUnFJNDcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUp1WHEzV2R4NlorRjdxbXlaNHc5alV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU1UQXdOVFV6TkZvWERUSTNNRE15TVRBdwpOVFV6TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU00MXNRcDBxRDFDeGhwWHVTeEcKY1dzK1FacTlsL2V3MkREVzNxd2lzNEloZjJ1VUEyekRNQ0xzN2hxTFNodGIzVitYRU56NUFPcG1VVjc5Tm9NZgpLMWJpTkJ2UURBRUhRSWRKVTZMcmx2NWtBdFRvcjB0dHhDSjNmRU5aWldWeE0xNk1tVCtQakJlTW40ZjFkWXF3Cm9oUktQQUIyTWxBVEZvWmgydFZvQ21kMWp0VUdBWDRZbkZQbHFLZm9lQXpmQnJibWJjQTBMQkhlaUFiL2hqN3AKRWx0SnVsOUJ1dzVNNjkyUXZnNnpJbzJINDhpN0dzT2VpTi81a20vdVBYZmNnalJrQ3R4aVNOL1VsTTZYU0tPMgpBRlZidGpsU3Y3UG5BYUVHUGhoRTVzemtFYWZybnc5dEZibHNCTi9GNUc0cVJnMld6VjZRQXFLakVKWTRMRkNaCnJ0TUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUIrMHRrMW5LOUpiWQprYlpnTHBxemFrRTIxRUl3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUx1WE5jWkV0WDNEcUFSbjA3QXNOWlB5TmFmckgKdkIrTG1ZbDhCOTVLY3NqeDhGOURUM1lnVjhPNmltL0twUWYzeC9pWFNCUG85RFoxLzNXMDhIMCtWaFpNbUxSMQpRZkhrWFRKVzQxRG0veXNtYlBFcVFOeURkUGJtWDBPaXpjZ3FveXFjSEZaZWZBOHNITUdjYUxjdUwvMUErbmQ1Cjg3VitGcUc0SG5RQkR1T1htbkY5Yk84SG1DY2lYMnFYMmV6ZE12RXN5bTA5VjJvc0hDQ1ZzRHZzd2R0UkZUZlEKblVmNURkWkR3TVhmN2I5THFWaHNxTm4rODN4MlJhZ00xMUJzRVlKV1VFbjhNZkJXVGU2V3l0RHJRQ0FsS0ZhVwp2bFE2N2JUVFlYUzZHN2VDZFp2QS9EWDNLU1JLUFUyMVhjTVJuWjk1L2xoakZIZERRV21oV0xEVjNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBempXeENuU29QVUxHR2xlNUxFWnhhejVCbXIyWDk3RFlNTmJlckNLemdpRi9hNVFECmJNTXdJdXp1R290S0cxdmRYNWNRM1BrQTZtWlJYdjAyZ3g4clZ1STBHOUFNQVFkQWgwbFRvdXVXL21RQzFPaXYKUzIzRUluZDhRMWxsWlhFelhveVpQNCtNRjR5ZmgvVjFpckNpRkVvOEFIWXlVQk1XaG1IYTFXZ0taM1dPMVFZQgpmaGljVStXb3AraDRETjhHdHVadHdEUXNFZDZJQnYrR1B1a1NXMG02WDBHN0RrenIzWkMrRHJNaWpZZmp5THNhCnc1NkkzL21TYis0OWQ5eUNOR1FLM0dKSTM5U1V6cGRJbzdZQVZWdTJPVksvcytjQm9RWStHRVRtek9RUnArdWYKRDIwVnVXd0UzOFhrYmlwR0RaYk5YcEFDb3FNUWxqZ3NVSm11MHdJREFRQUJBb0lCQUVJZmQyako1WlRYVDV6cwoya1QzUmJGRTRsYVRTeUt5dzNCTnhsTmVRVCtPTEVTN3pxbFdvWjNoYWF4N1U4VVlIUkZrNkpSakNFY2hqaUF1CmhBZGh2RXo4OWdhaEhPaExnZ2FmbmNFVldISzBjVEFDZVF0djVEL0ZIc1NkNnVTdmV2QnJsMHlKWkR1ODdQNzAKMTc4a1NxVEU5UjZVeUNkako0cnAzL2traG9tTDFsbG9qNDVvSzdHOFZvLzdLV1ZDcWtBNTIzZEZkMlMwZ2NtcgpGczI2MmlseU16b3dSemdTbE13V3ZBR0o5ZzFqWitacGx6REYzRGJtdm9pWEdESVg2MmFrTFM5eGQwUWxjMjFnCnd1V01MZFR0K2pyZU1iRE5TUW8yV0VUYk5Xd0dzOHB3OHNERFl4R0dsRklvK2hQMm5za3dkTWpqVm05VEZ3KzMKbStpb00va0NnWUVBM3Z6a2FnOUMrWWFsSE5OQ2Z4bHExekI5MGcweEt6UW5FQXlvYkRsR2VWSTlYQWQ3L2FGSgpsb0x6VWJtMkg0dlhEN1RJTDEwbWRKanowWWVrMEtRYk0zUnkrbmJwSHN5ZGt3cjVBVXZpdlhOUENkM25xUUxqCnN3eGMrMGZmVXlhVmJBWmNwRlpVbGpaZlU1WHJ6Qmc0YjhEaEpjQXBaTGJOSWJYL1R1RHdRMzBDZ1lFQTdMenIKRVB1cjNRZ2pjTGpwN2hSbm9kY1ROSjJTbUJPTWxUTW9WSDhxSzRxN0tCZTZCejQ4eU1TamZSRUFrdVM2cExlbgpYM3ozMnArK0t3c0lwU0VJN2pDd2F1QURsdU1zWTd0bnpHYWM3UWxtSW1CQzhXRDBYOEErTFdWaTRaWDFMNjkyCkNucENxVWpHdU9lL20rWk5hUnJDNktwTkN4eFFFQmtRK1diOHJJOENnWUVBMWtWT083Z0VsSC9Vb3psQjJaNFQKODBuT2JZeHRwZVZNYi9pcDBxekswb083SUhhMHA0aFhqUUN5VE9MV1pjUGJXV1ZQUTJ3UUt0UmEzZ21venpBUwpUMFJqdzllRnRTbkxkT09EV01LUjA1Zzg1KzlLenpaT2xOdVpjWUNqMFdQdkMwbWx0ZWliQ1dpZisxTEJyWEhNCnNWNDNPeTVHMkZkc0VDdXhkQnRqNUlVQ2dZRUFqSk5SOG0rL2lpeSsvcnlQREhUSlpPelYxclNLekFzdnU1ajUKSmRPdE10WGFkT0JCOHZNZUhRbkhHd2p4a2tpSUhDK0NEODJoVUF6elc1UGR1bEIzZ1JrZ2FSWkVpMkN5aHpaTgpXSzdHR0dzd1h0RlNid3Jua2NRU0o5ckFjTHdmTUFXOHpsUHpLWnF4aGpMM01KZjg5NkNRaEtBN3g1RTBhWnE0CjNhQXVBamtDZ1lFQW55Yzl0aTMwUFEvbWFlZWF5UnFGRy9oMUYvK0pyeXZJYURNakNRNUpmNE5FdUVhWkphZFIKWmV6a1FzSUVGZ09McVpNRVNjV2x6SWZSa1NmbFVSV1lFMklobXh5QkJXY1R6dmhNR3FwN1NoZzd2SVpFb3N4cgpkYmdSWW9XOU5jQTRvTzVnTTRMTFVjei9zdnlLdWlrdlVkV1c0a210aUJXUERMdEQxNnBIczlzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "true"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # In cni chaining mode, the other chained plugin is responsible for underlying connectivity,
  # so cilium eBPF host routing shoud not work, and let it fall back to the legacy routing mode
  enable-host-legacy-routing: "true"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"
  # Enable chaining with another CNI plugin
  #
  # Supported modes:
  #  - none
  #  - aws-cni
  #  - flannel
  #  - generic-veth
  #  - portmap (Enables HostPort support for Cilium)
  cni-chaining-mode: generic-veth
  enable-identity-mark: "false"
  # Disable the PodCIDR route to the cilium_host interface as it is not
  # required. While chaining, it is the responsibility of the underlying plugin
  # to enable routing.
  enable-local-node-route: "false"

  enable-ipv4-masquerade: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  read-cni-conf: /tmp/cni-configuration/cni-config
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-uninstall: "true"
  # Disable health checking, when chaining mode is not set to portmap or none
  enable-endpoint-health-checking: "false"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cni-configuration
          mountPath: /tmp/cni-configuration
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: cni-configuration
        configMap:
          name: cni-configuration
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.1@sha256:f47ba86042e11b11b1a1e3c8c34768a171c6d8316a3856253f4ad4a92615d555"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.1@sha256:ad7ce650c7877f8d769264e20bf5b9020ea778a9530cfae9d67a5c9d942c04cb"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
