apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: netop-manager-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cniops.cni-manager.netop-manager.io
spec:
  group: cni-manager.netop-manager.io
  names:
    kind: CniOps
    listKind: CniOpsList
    plural: cniops
    singular: cniops
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CniOps is the Schema for the cniops API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CniOpsSpec defines the desired state of CniOps
            properties:
              config:
                properties:
                  workload:
                    description: First key should be internal child api
                    properties:
                      cniConfig:
                        type: object
                      options:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                      unmanaged:
                        type: boolean
                      version:
                        type: string
                    required:
                    - type
                    - version
                    type: object
                type: object
            type: object
          status:
            description: CniOpsStatus defines the observed state of CniOps
            properties:
              Multus:
                type: boolean
              cniStatus:
                additionalProperties:
                  type: string
                type: object
              cniType:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
              cniVersion:
                type: string
              internalState:
                type: string
              ipam:
                type: string
              managedState:
                type: string
              observedGeneration:
                format: int64
                type: integer
              operatorStatus:
                type: string
              upgradeStatus:
                properties:
                  cniUpgradeState:
                    type: string
                  currentVersion:
                    type: string
                  previousVersion:
                    type: string
                type: object
              workloadCheck:
                additionalProperties:
                  type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cniopsstatuses.cni-manager.netop-manager.io
spec:
  group: cni-manager.netop-manager.io
  names:
    kind: CniOpsStatuses
    listKind: CniOpsStatusesList
    plural: cniopsstatuses
    singular: cniopsstatuses
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CniOpsStatuses is the Schema for the cniopsstatuses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CniOpsStatusesSpec defines the desired state of CniOpsStatuses
            properties:
              foo:
                description: Foo is an example field of CniOpsStatuses. Edit cniopsstatuses_types.go to remove/update
                type: string
            type: object
          status:
            description: CniOpsStatusesStatus defines the observed state of CniOpsStatuses
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: installers.netop-manager-cntrlr.netop-manager.io
spec:
  group: netop-manager-cntrlr.netop-manager.io
  names:
    kind: Installer
    listKind: InstallerList
    plural: installers
    singular: installer
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Installer is the Schema for the installers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstallerSpec defines the desired state of Installer
            properties:
              config:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file'
                properties:
                  networkFunctions:
                    additionalProperties:
                      description: Individual CNI Configs
                      properties:
                        arrayOptions:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          type: object
                        cniConfig:
                          type: object
                        lbConfig:
                          type: object
                        options:
                          additionalProperties:
                            type: string
                          type: object
                        smConfig:
                          type: object
                        type:
                          type: string
                        version:
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    description: NetworkFunctions/Operators
                    type: object
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
          status:
            description: InstallerStatus defines the observed state of Installer
            properties:
              clusterOverview:
                additionalProperties:
                  type: string
                description: store count of pods & services
                type: object
              componentStatus:
                additionalProperties:
                  properties:
                    op:
                      type: string
                    state:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  type: object
                description: Single String String
                type: object
              desiredIntent:
                additionalProperties:
                  properties:
                    op:
                      type: string
                    state:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  type: object
                type: object
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
              state:
                description: 'Todo: Store predefined keys for faster checking'
                type: string
              validtionStatus:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: loadbalanaceropsstatuses.lb-manager.netop-manager.io
spec:
  group: lb-manager.netop-manager.io
  names:
    kind: LoadBalanacerOpsStatuses
    listKind: LoadBalanacerOpsStatusesList
    plural: loadbalanaceropsstatuses
    singular: loadbalanaceropsstatuses
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LoadBalanacerOpsStatuses is the Schema for the loadbalanaceropsstatuses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoadBalanacerOpsStatusesSpec defines the desired state of LoadBalanacerOpsStatuses
            properties:
              foo:
                description: Foo is an example field of LoadBalanacerOpsStatuses. Edit loadbalanaceropsstatuses_types.go to remove/update
                type: string
            type: object
          status:
            description: LoadBalanacerOpsStatusesStatus defines the observed state of LoadBalanacerOpsStatuses
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: loadbalancerops.lb-manager.netop-manager.io
spec:
  group: lb-manager.netop-manager.io
  names:
    kind: LoadBalancerOps
    listKind: LoadBalancerOpsList
    plural: loadbalancerops
    singular: loadbalancerops
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LoadBalancerOps is the Schema for the loadbalancerops API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoadBalancerOpsSpec defines the desired state of LoadBalancerOps
            properties:
              externalCIDRs:
                description: CIDR pools managed by this loadbalancer
                items:
                  type: string
                type: array
              lBType:
                description: 'Load balancer flavor: Only MetalLB as of now'
                type: string
            type: object
          status:
            description: LoadBalancerOpsStatus defines the observed state of LoadBalancerOps
            properties:
              externalCIDRs:
                description: CIDR pools managed by this loadbalancer
                items:
                  type: string
                type: array
              lBType:
                description: 'Load balancer flavor: Only MetalLB as of now'
                type: string
              state:
                description: Provisioningstatus - Started/Progressing/Complete/Degraded
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: monitoringops.monitoring-manager.netop-manager.io
spec:
  group: monitoring-manager.netop-manager.io
  names:
    kind: MonitoringOps
    listKind: MonitoringOpsList
    plural: monitoringops
    singular: monitoringops
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MonitoringOps is the Schema for the monitoringops API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringOpsSpec defines the desired state of MonitoringOps
            properties:
              config:
                properties:
                  workload:
                    description: First key should be internal child api
                    properties:
                      options:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                      unmanaged:
                        type: boolean
                      version:
                        type: string
                    required:
                    - type
                    - version
                    type: object
                type: object
            type: object
          status:
            description: MonitoringOpsStatus defines the observed state of MonitoringOps
            properties:
              mStatus:
                additionalProperties:
                  type: string
                type: object
              mType:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
              observedGeneration:
                format: int64
                type: integer
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: monitoringopsstatuses.monitoring-manager.netop-manager.io
spec:
  group: monitoring-manager.netop-manager.io
  names:
    kind: MonitoringOpsStatuses
    listKind: MonitoringOpsStatusesList
    plural: monitoringopsstatuses
    singular: monitoringopsstatuses
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MonitoringOpsStatuses is the Schema for the monitoringopsstatuses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringOpsStatusesSpec defines the desired state of MonitoringOpsStatuses
            properties:
              foo:
                description: Foo is an example field of MonitoringOpsStatuses. Edit monitoringopsstatuses_types.go to remove/update
                type: string
            type: object
          status:
            description: MonitoringOpsStatusesStatus defines the observed state of MonitoringOpsStatuses
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicemeshops.service-mesh.netop-manager.io
spec:
  group: service-mesh.netop-manager.io
  names:
    kind: ServiceMeshOps
    listKind: ServiceMeshOpsList
    plural: servicemeshops
    singular: servicemeshops
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceMeshOps is the Schema for the servicemeshops API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceMeshOpsSpec defines the desired state of ServiceMeshOps
            properties:
              clusterName:
                type: string
              meshMode:
                type: string
              meshName:
                type: string
              meshType:
                type: string
              networkName:
                type: string
              remoteCtrlPlane:
                type: string
            type: object
          status:
            description: ServiceMeshOpsStatus defines the observed state of ServiceMeshOps
            properties:
              meshType:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicemeshopsstatuses.service-mesh.netop-manager.io
spec:
  group: service-mesh.netop-manager.io
  names:
    kind: ServiceMeshOpsStatuses
    listKind: ServiceMeshOpsStatusesList
    plural: servicemeshopsstatuses
    singular: servicemeshopsstatuses
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceMeshOpsStatuses is the Schema for the servicemeshopsstatuses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceMeshOpsStatusesSpec defines the desired state of ServiceMeshOpsStatuses
            properties:
              foo:
                description: Foo is an example field of ServiceMeshOpsStatuses. Edit servicemeshopsstatuses_types.go to remove/update
                type: string
            type: object
          status:
            description: ServiceMeshOpsStatusesStatus defines the observed state of ServiceMeshOpsStatuses
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: netop-manager-controller-manager
  namespace: netop-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: netop-manager-leader-election-role
  namespace: netop-manager-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: netop-manager-manager-role
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - nodes
  - pods
  - podtemplates
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backyards.banzaicloud.io
  resources:
  - controlplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniops
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniops/finalizers
  verbs:
  - update
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniops/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniopsstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniopsstatuses/finalizers
  verbs:
  - update
- apiGroups:
  - cni-manager.netop-manager.io
  resources:
  - cniopsstatuses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalanaceropsstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalanaceropsstatuses/finalizers
  verbs:
  - update
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalanaceropsstatuses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalancerops
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalancerops/finalizers
  verbs:
  - update
- apiGroups:
  - lb-manager.netop-manager.io
  resources:
  - loadbalancerops/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringops
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringops/finalizers
  verbs:
  - update
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringops/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringopsstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringopsstatuses/finalizers
  verbs:
  - update
- apiGroups:
  - monitoring-manager.netop-manager.io
  resources:
  - monitoringopsstatuses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - netop-manager-cntrlr.netop-manager.io
  resources:
  - installers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - netop-manager-cntrlr.netop-manager.io
  resources:
  - installers/finalizers
  verbs:
  - update
- apiGroups:
  - netop-manager-cntrlr.netop-manager.io
  resources:
  - installers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - amazoncloudintegrations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - amazoncloudintegrations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - apiservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - apiservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - applicationlayers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - applicationlayers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - authentications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - authentications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - compliances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - compliances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - installations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - installations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - intrusiondetections
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - intrusiondetections/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - logcollectors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - logcollectors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - logstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - logstorages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - managementclusterconnections
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - managementclusterconnections/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - managers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - managers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.tigera.io
  resources:
  - monitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.tigera.io
  resources:
  - monitors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - projectcalico.org
  resources:
  - bgpconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - projectcalico.org
  resources:
  - bgpconfigurations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - projectcalico.org
  resources:
  - bgppeers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - projectcalico.org
  resources:
  - bgppeers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - bind
  - create
  - delete
  - escalate
  - get
  - list
  - update
  - watch
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshops
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshops/finalizers
  verbs:
  - update
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshops/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshopsstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshopsstatuses/finalizers
  verbs:
  - update
- apiGroups:
  - service-mesh.netop-manager.io
  resources:
  - servicemeshopsstatuses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - servicemesh.cisco.com
  resources:
  - istiocontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: netop-manager-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: netop-manager-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: netop-manager-leader-election-rolebinding
  namespace: netop-manager-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: netop-manager-leader-election-role
subjects:
- kind: ServiceAccount
  name: netop-manager-controller-manager
  namespace: netop-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: netop-manager-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netop-manager-manager-role
subjects:
- kind: ServiceAccount
  name: netop-manager-controller-manager
  namespace: netop-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: netop-manager-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netop-manager-proxy-role
subjects:
- kind: ServiceAccount
  name: netop-manager-controller-manager
  namespace: netop-manager-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 51681485.netop-manager.io
kind: ConfigMap
metadata:
  name: netop-manager-config
  namespace: netop-manager-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: netop-manager-controller-manager-metrics-service
  namespace: netop-manager-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: netop-manager-controller-manager
  namespace: netop-manager-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8444
        - --upstream=http://127.0.0.1:9999/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8444
          name: https
          protocol: TCP
      - args:
        - --metrics-bind-address=127.0.0.1:9999
        - --leader-elect
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SYSTEM_ID
          value: {{config.aci_config.system_id}}
        {% if config.cko_proxy_config %}
        - name: HTTP_PROXY
          value: {{config.cko_proxy_config.http_proxy}}
        - name: HTTPS_PROXY
          value: {{config.cko_proxy_config.https_proxy}}
        - name: NO_PROXY
          value: {{config.cko_proxy_config.no_proxy}}
        {% endif %}
        - name: SERVER_IP
          valueFrom:
            configMapKeyRef:
              key: serverIP
              name: websocket-config
              optional: true
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              key: serverPort
              name: websocket-config
              optional: true
        image: {{ config.registry.image_prefix }}/cni-manager:{{ config.registry.network_operator_version }}
        imagePullPolicy: Always
        name: manager
        resources:
          requests:
            cpu: 125m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - NET_ADMIN
            - SYS_PTRACE
            - NET_RAW
          privileged: true
        volumeMounts:
        - mountPath: /mnt/cni-bin
          name: cni-bin
        - mountPath: /mnt/cni-conf
          name: cni-conf
        - mountPath: /mnt/cni-config
          name: cni-config-volume
        - mountPath: /status
          name: status-config-volume
      hostNetwork: true
      securityContext:
        runAsNonRoot: false
      serviceAccountName: netop-manager-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - key: node.kubernetes.io/network-unavailable
      - key: node.kubernetes.io/not-ready
      - key: node.kubernetes.io/unreachable
      volumes:
      - hostPath:
          path: /opt
        name: cni-bin
      - hostPath:
          path: /etc
        name: cni-conf
      - configMap:
          name: cni-config
          optional: true
        name: cni-config-volume
      - configMap:
          name: status-config
          optional: true
        name: status-config-volume
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cni-config
  namespace: netop-manager-system
data:
  cniconfig.yaml: |-
    cniConfig:
      cko-cni-calico:
      - "01-calico.conflist"
      - "01-calico.conf"
      - "10-calico.conflist"
      - "10-calico.conf"
      cko-cni-aci:
      - "01-opflex-cni.conf"
      - "10-opflex-cni.conf"
      cko-cni-cilium:
      - "05-cilium.conf"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: status-config
  namespace: netop-manager-system
data:
    variable.sh: |-
     #!/bin/bash
      
      namespace="netop-manager-system"
      resourcelabelKey="netop-manager-resource"
      projectlabelKey="netop-manager"
      resources="cniops.cni-manager.netop-manager.io installers.netop-manager-cntrlr.netop-manager.io loadbalanacerops.lb-manager.netop-manager.io monitoringops.monitoring-manager.netop-manager.io servicemeshops.service-mesh.netop-manager.io"
      gitrepo="{{ config.cko_git_config.git_repo }}"
      gitdir="{{ config.cko_git_config.git_dir }}"
      gitbranch="{{ config.cko_git_config.git_branch }}"
      gittoken="{{ config.cko_git_config.git_token }}"
      gituser="{{ config.cko_git_config.git_user }}"
      gitemail="{{ config.cko_git_config.git_email }}"
      sleepduration={{ config.cko_git_config.sleep_duration }}s
{% if config.control_cluster_websocket %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: websocket-config
  namespace: netop-manager-system
data:
  serverIP: {{ config.control_cluster_websocket.server_ip }}
  serverPort: {{ config.control_cluster_websocket.server_port }}
  serverEnabled: false
{% endif %}