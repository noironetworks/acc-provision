usage: acc_provision.py [-h] [-v] [--release] [--debug] [--sample] [-c file]
                        [-o file] [-z file] [-r file] [-a] [-d] [-u name]
                        [-p pass] [-w timeout] [--list-flavors] [-f flavor]
                        [-t token] [--test-data-out file] [--skip-kafka-certs]
                        [--upgrade] [--disable-multus disable_multus]

Provision an ACI/Kubernetes installation

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit
  --release             print git release info
  --debug               enable debug
  --sample              print a sample input file with fabric configuration
  -c, --config file     input file with your fabric configuration
  -o, --output file     output file for your kubernetes deployment
  -z, --output_tar file
                        output zipped tar file for your kubernetes deployment
  -r, --aci_operator_cr file
                        output file for your aci-operator deployment custom
                        resource
  -a, --apic            create/validate the required APIC resources
  -d, --delete          delete the APIC resources that would have been created
  -u, --username name   apic-admin username to use for APIC API access
  -p, --password pass   apic-admin password to use for APIC API access
  -w timeout, --timeout timeout
                        wait/timeout to use for APIC API access
  --list-flavors        list available configuration flavors
  -f flavor, --flavor flavor
                        set configuration flavor. Example: openshift-3.6
  -t token, --version-token token
                        set a configuration version token. Default is UUID.
  --test-data-out file  capture apic responses for test replay. E.g.
                        ../testdata/apic_xx.json
  --skip-kafka-certs    skip kafka certificate generation
  --upgrade             generate kubernetes deployment file for cluster
                        upgrade
  --disable-multus disable_multus
                        true/false to disable/enable multus in cluster
