apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    aci-containers-config-version: dummy
    name: aci-containers-controller
    network-plugin: aci-containers
  name: aci-containers-controller
  namespace: aci-containers-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aci-containers-controller
      network-plugin: aci-containers
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
      labels:
        name: aci-containers-controller
        network-plugin: aci-containers
      name: aci-containers-controller
      namespace: aci-containers-system
    spec:
      containers:
      - env:
        - name: GBP_SERVER_CONF
          value: /usr/local/etc/aci-containers/gbp-server.conf
        image: noirolabs/gbp-server:ci_test
        imagePullPolicy: Always
        name: aci-gbpserver
        volumeMounts:
        - mountPath: /usr/local/etc/aci-containers/
          name: controller-config-volume
        - mountPath: /certs
          name: kafka-certs
        - mountPath: /usr/local/etc/aci-cert/
          name: aci-user-cert-volume
      - env:
        - name: WATCH_NAMESPACE
          value: ''
        - name: ACI_SNAT_NAMESPACE
          value: aci-containers-system
        - name: ACI_SNAGLOBALINFO_NAME
          value: snatglobalinfo
        - name: ACI_RDCONFIG_NAME
          value: routingdomain-config
        - name: SYSTEM_NAMESPACE
          value: aci-containers-system
        image: noirolabs/aci-containers-controller:ci_test
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /status
            port: 8091
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        name: aci-containers-controller
        volumeMounts:
        - mountPath: /usr/local/etc/aci-containers/
          name: controller-config-volume
        - mountPath: /usr/local/etc/aci-cert/
          name: aci-user-cert-volume
      hostNetwork: true
      initContainers:
      - command:
        - gbpserver
        - -init
        - -config-path
        - /usr/local/etc/aci-containers/gbp-server.conf
        image: noirolabs/gbp-server-batch:ci_test
        imagePullPolicy: Always
        name: stateinit
        volumeMounts:
        - mountPath: /usr/local/etc/aci-containers/
          name: controller-config-volume
        - mountPath: /usr/local/etc/aci-cert/
          name: aci-user-cert-volume
      serviceAccountName: aci-containers-controller
      tolerations:
      - effect: NoExecute
        operator: Exists
        tolerationSeconds: 60
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: kafka-certs
        secret:
          secretName: kafka-client-certificates
      - name: aci-user-cert-volume
        secret:
          secretName: aci-user-cert
      - configMap:
          items:
          - key: controller-config
            path: controller.conf
          - key: gbp-server-config
            path: gbp-server.conf
          name: aci-containers-config
        name: controller-config-volume
